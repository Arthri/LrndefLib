# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = true

#### Diagnostics ####

### .NET rules

# this.* preferences
dotnet_diagnostic.IDE0003.severity = suggestion

# Use language keywords instead of framework type names for type references
dotnet_diagnostic.IDE0049.severity = warning

## Modifier preferences

# Order modifiers
dotnet_diagnostic.IDE0036.severity = warning
# Add accessibility modifiers
dotnet_diagnostic.IDE0040.severity = suggestion
# Make local function static
dotnet_diagnostic.IDE0062.severity = suggestion

# Remove unnecessary parentheses
dotnet_diagnostic.IDE0047.severity = suggestion

## Expression-level preferences

# Use object initializers
dotnet_diagnostic.IDE0017.severity = suggestion
# Use collection initializers
dotnet_diagnostic.IDE0028.severity = suggestion
# Use auto property
dotnet_diagnostic.IDE0032.severity = suggestion
# Use explicitly provided tuple name
dotnet_diagnostic.IDE0033.severity = suggestion
# Simplify 'default' expression
dotnet_diagnostic.IDE0034.severity = suggestion
# Use inferred member name
dotnet_diagnostic.IDE0037.severity = suggestion
# Deconstruct variable declaration
dotnet_diagnostic.IDE0042.severity = suggestion
# Use conditional expression for assignment
dotnet_diagnostic.IDE0045.severity = silent
# Use conditional expression for return
dotnet_diagnostic.IDE0046.severity = silent
# Use compound assignment
dotnet_diagnostic.IDE0054.severity = suggestion
# Use index operator
dotnet_diagnostic.IDE0056.severity = suggestion
# Use range operator
dotnet_diagnostic.IDE0057.severity = suggestion
# Use 'System.HashCode.Combine'
dotnet_diagnostic.IDE0070.severity = silent
# Simplify interpolation
dotnet_diagnostic.IDE0071.severity = warning
# Use coalesce compound assignment
dotnet_diagnostic.IDE0074.severity = suggestion
# Simplify conditional expression
dotnet_diagnostic.IDE0075.severity = suggestion
# Convert `typeof` to `nameof`
dotnet_diagnostic.IDE0082.severity = warning
# Simplify `new` expression
dotnet_diagnostic.IDE0090.severity = suggestion

## Null checking preferences

# Use throw expression
dotnet_diagnostic.IDE0016.severity = suggestion
# Use coalesce expression (non-nullable reference types)
dotnet_diagnostic.IDE0029.severity = suggestion
# Use coalesce expression (nullable types)
dotnet_diagnostic.IDE0030.severity = suggestion
# Use null propagation
dotnet_diagnostic.IDE0031.severity = suggestion
# Use conditional delegate call
dotnet_diagnostic.IDE1005.severity = suggestion

## var preferences

# Use 'var' instead of explicit type
dotnet_diagnostic.IDE0007.severity = silent
# Use explicit type instead of 'var'
dotnet_diagnostic.IDE0008.severity = silent

## Expression-bodied preferences

# Use expression body for constructors
dotnet_diagnostic.IDE0021.severity = suggestion
# Use expression body for methods
dotnet_diagnostic.IDE0022.severity = suggestion
# Use expression body for conversion operators
dotnet_diagnostic.IDE0023.severity = suggestion
# Use expression body for operators
dotnet_diagnostic.IDE0024.severity = suggestion
# Use expression body for properties
dotnet_diagnostic.IDE0025.severity = suggestion
# Use expression body for indexers
dotnet_diagnostic.IDE0026.severity = suggestion
# Use expression body for accessors
dotnet_diagnostic.IDE0027.severity = suggestion
# Use expression body for lambdas
dotnet_diagnostic.IDE0053.severity = suggestion
# Use expression body for local functions
dotnet_diagnostic.IDE0061.severity = suggestion

## Pattern matching preferences

# Use pattern matching to avoid 'as' followed by a 'null' check
dotnet_diagnostic.IDE0019.severity = suggestion
# Use pattern matching to avoid 'is' check followed by a cast
dotnet_diagnostic.IDE0020.severity = suggestion
# Use switch expression
dotnet_diagnostic.IDE0066.severity = suggestion
# Use pattern matching
dotnet_diagnostic.IDE0078.severity = suggestion
# Use pattern matching (`not` operator)
dotnet_diagnostic.IDE0083.severity = suggestion

## Code block preferences

# Add braces
dotnet_diagnostic.IDE0011.severity = suggestion
# Use simple 'using' statement
dotnet_diagnostic.IDE0063.severity = suggestion

# 'using' directive placement
dotnet_diagnostic.IDE0065.severity = suggestion

### Unnecessary code rules

# Simplify name
dotnet_diagnostic.IDE0001.severity = suggestion
# Simplify member access
dotnet_diagnostic.IDE0002.severity = suggestion
# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = suggestion
# Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = suggestion
# Remove unused private member
dotnet_diagnostic.IDE0051.severity = silent
# Remove unread private member
dotnet_diagnostic.IDE0052.severity = silent
# Remove unused parameter
dotnet_diagnostic.IDE0060.severity = silent
# Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = suggestion
# Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = suggestion
# Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = suggestion
# Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = suggestion

### Miscellaneous rules

# Remove invalid global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0076.severity = suggestion
# Avoid legacy format target in global 'SuppressMessageAttribute'
dotnet_diagnostic.IDE0077.severity = suggestion

# Formatting rules
dotnet_diagnostic.IDE0055.severity = suggestion

# Naming rules
dotnet_diagnostic.IDE1006.severity = suggestion

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:suggestion

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = false:suggestion
dotnet_style_prefer_inferred_tuple_names = false:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = false:silent

# Parameter preferences
dotnet_code_quality_unused_parameters = non_public:silent

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = true:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:silent
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_lambdas = true:suggestion
csharp_style_expression_bodied_local_functions = false:suggestion
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_switch_expression = false:silent

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# Code-block preferences
csharp_prefer_braces = true:suggestion
csharp_prefer_simple_using_statement = false:silent

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = false:silent
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:silent
csharp_style_unused_value_assignment_preference = unused_local_variable:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:warning

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.type_parameters_should_be_begins_with_t.severity = suggestion
dotnet_naming_rule.type_parameters_should_be_begins_with_t.symbols = type_parameters
dotnet_naming_rule.type_parameters_should_be_begins_with_t.style = begins_with_t

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_field_should_be_begins_with__.severity = suggestion
dotnet_naming_rule.private_field_should_be_begins_with__.symbols = private_field
dotnet_naming_rule.private_field_should_be_begins_with__.style = begins_with__

dotnet_naming_rule.public_or_protected_or_internal_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.public_or_protected_or_internal_fields_should_be_pascal_case.symbols = public_or_protected_or_internal_fields
dotnet_naming_rule.public_or_protected_or_internal_fields_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.local_functions_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.locals_should_be_camel_case.severity = suggestion
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case

dotnet_naming_rule.parameters_should_be_camel_case.severity = suggestion
dotnet_naming_rule.parameters_should_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_should_be_camel_case.style = camel_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum, delegate
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.private_field.applicable_kinds = field
dotnet_naming_symbols.private_field.applicable_accessibilities = private
dotnet_naming_symbols.private_field.required_modifiers = 

dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameters.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters.required_modifiers = 

dotnet_naming_symbols.public_or_protected_or_internal_fields.applicable_kinds = field
dotnet_naming_symbols.public_or_protected_or_internal_fields.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.public_or_protected_or_internal_fields.required_modifiers = 

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_symbols.local_functions.applicable_accessibilities = *
dotnet_naming_symbols.local_functions.required_modifiers = 

dotnet_naming_symbols.locals.applicable_kinds = local
dotnet_naming_symbols.locals.applicable_accessibilities = local
dotnet_naming_symbols.locals.required_modifiers = 

dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_symbols.parameters.applicable_accessibilities = *
dotnet_naming_symbols.parameters.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.begins_with__.required_prefix = _
dotnet_naming_style.begins_with__.required_suffix = 
dotnet_naming_style.begins_with__.word_separator = 
dotnet_naming_style.begins_with__.capitalization = camel_case

dotnet_naming_style.camel_case.required_prefix = 
dotnet_naming_style.camel_case.required_suffix = 
dotnet_naming_style.camel_case.word_separator = 
dotnet_naming_style.camel_case.capitalization = camel_case

dotnet_naming_style.begins_with_t.required_prefix = T
dotnet_naming_style.begins_with_t.required_suffix = 
dotnet_naming_style.begins_with_t.word_separator = 
dotnet_naming_style.begins_with_t.capitalization = pascal_case
